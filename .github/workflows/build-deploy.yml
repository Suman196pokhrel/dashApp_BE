name: Build and Deploy Dash App

on:
  push:
    branches:
      - "main"

jobs:
  JOB1:
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      POSTGRES_DB: ${{secrets.POSTGRES_DB}}
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      MAILGUN_API_URL: ${{secrets.MAILGUN_API_URL}}
      MAILGUN_PUBLIC_API: ${{secrets.MAILGUN_PUBLIC_API}}
      MAILGUN_PRIVATE_API: ${{secrets.MAILGUN_PRIVATE_API}}
      SENDER_EMAIL: ${{secrets.SENDER_EMAIL}}
      OTP_EXPIRES_MINUTES: ${{secrets.OTP_EXPIRES_MINUTES}}
      TWILIO_ACC_SID: ${{secrets.TWILIO_ACC_SID}}
      TWILIO_AUTH_TOKEN: ${{secrets.TWILIO_AUTH_TOKEN}}
      VERIFY_SID: ${{secrets.VERIFY_SID}}
      TWILIO_PHONE_NUMBER: ${{secrets.TWILIO_PHONE_NUMBER}}
      RECIPIENT_NUMBER: ${{secrets.RECIPIENT_NUMBER}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Pulling GitHub Repo
        uses: actions/checkout@v3
      - name: Installing python version 3.9.17
        uses: actions/setup-python@v4
        with:
          python-version: "3.9.17"
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install Python Packages
        run: pip install -r requirements.txt
      - name: Installing & Running Test Cases Using PyTest
        run: |
          pip install pytest
          pytest -v -s

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push docker image to docker hub
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/dashappvone:latest

      - name: Image digest
        run: echo ${{steps.docker_build.outputs.digest}}
